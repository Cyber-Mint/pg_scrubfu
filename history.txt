    1  sudo apt install keepass2
    2  sudo apt update
    3  sudo apt upgrade
    4  sudo apt autoremove
    5  sudo apt install nextcloud-desktop
    6  sudo apt-get install chrome-gnome-shell
    7  sudo apt install terminator
    8  sudo apt install libglib2.0-0 libgstreamer-plugins-base0.10-0  libxcb-shape0 libxcb-shm0 libxcb-xfixes0 libxcb-randr0 libxcb-image0 libfontconfig1 libgl1-mesa-glx libxi6 libsm6 libxrender1 libpulse0 libxcomposite1 libxslt1.1 libsqlite3-0 libxcb-keysyms1 libxcb-xtest0
    9  sudo apt install libglib2.0-0 libgstreamer-plugins-base1.0-0  libxcb-shape0 libxcb-shm0 libxcb-xfixes0 libxcb-randr0 libxcb-image0 libfontconfig1 libgl1-mesa-glx libxi6 libsm6 libxrender1 libpulse0 libxcomposite1 libxslt1.1 libsqlite3-0 libxcb-keysyms1 libxcb-xtest0
   10  exit
   11  cd Downloads/
   12  sudo apt install ./zoom_amd64.deb
   13  exit
   14  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
   15  echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
   16  sudo apt-get update 
   17  sudo apt-get install google-chrome-stable
   18  sudo apt-get purge google-chrome-stable
   19  cd /etc/apt/souces.list/d/
   20  cd /etc/apt/sources.list.d/
   21  ls
   22  cd ..
   23  sudo nano sources.list
   24  ls
   25  cd sources.list.d/
   26  ll
   27  ls
   28  sudo apt install -y chromium-browser
   29  exit
   30  mkdir dev
   31  cddev
   32  cd dev
   33  git clone git@github.com:Bank-Builder/ever-wiki.git
   34  sudo apt install git
   35  sudo apt install -y chromium-browser
   36  cd .ssh
   37  ll
   38  ssh-keygen -t rsa -b 4096 -C "bank-builder" -f id_private
   39  eval "$(ssh-agent -s)"
   40  ll
   41  xclip -sel clip < ~/.ssh/id_private.pub 
   42  sudo apt install xclip
   43  xclip -sel clip < ~/.ssh/id_private.pub 
   44  cat ~/.ssh/id_private.pub
   45  chmod 400 ~/.ssh/id_private
   46  nano ~/.ssh/config
   47  xclip -sel clip < ~/.ssh/id_private.pub 
   48  cd ../dev
   49  git clone git@github.com:Bank-Builder/ever-wiki.git
   50  git config --global user.name "Bank-Builder"
   51  git config --global color.ui auto
   52  git clone git@github.com:Bank-Builder/ever-wiki.git
   53  eval "$(ssh-agent -s)"
   54  ssh-add -l
   55  cd ~/.ssh
   56  ssh-add -l
   57  eval "$(ssh-agent -s)"
   58  ssh-add -l
   59  ll
   60  ssd-add id_private
   61  ssh-add id_private
   62  ssh-add -l
   63  cd ../dev
   64  git clone git@github.com:Bank-Builder/ever-wiki.git
   65  cd ever-wiki/
   66  git add .
   67  git commit -m "Add ssh-add {identity}"
   68  git config --global user.name "Bank-Builder"
   69  git config --global color.ui auto
   70  git config --global user.email "andrew.turpin@cyber-mint.com"
   71  git commit -m "Add ssh-add {identity}"
   72  git push
   73  zenity --color-selection &
   74  sudo update-alternatives --config x-terminal-emulator
   75  sudo apt install ffmpeg
   76  sudo add-apt-repository ppa:obsproject/obs-studio
   77  sudo apt install obs-studio[2~[2~[2~[2~[2~[2~[2~[2~[2~[2~
   78  cd ~/Downloads/
   79  wget https://github.com/CatxFish/obs-v4l2sink/releases/download/0.1.0/obs-v4l2sink.deb
   80  sudo apt install ./obs-v4l2sink.deb 
   81  sudo apt install -y v4l2loopback-dkms
   82  ls /dev/video*
   83  sudo modprobe v4l2loopback
   84  ls /dev/video*
   85  sudo apt install stacer
   86  stacer --version
   87  exit
   88  sudo apt install docker.io
   89  sudo groupadd docker
   90  sudo usermod -a -G docker $USER
   91  sudo systemctl restart docker.service
   92  sudo apt install docker-compose
   93  which python
   94  python --version
   95  python3
   96  which python3
   97  sudo update-alternatives --config python
   98  sudo update-alternatives --config p
   99  sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10
  100  sudo update-alternatives --config python
  101  which python
  102  python --version
  103  sudo python3 -m pip uninstall pip && sudo apt install python3-pip --reinstall
  104  sudo update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
  105  sudo apt install python3-pip --reinstall
  106  pip --version
  107  which pip
  108  which pip3
  109  sudo update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
  110  which pip3
  111  which pip
  112  locale
  113  sudo locale-gen en_GB.UTF-8
  114  locale
  115  sudo dpkg-reconfigure locales
  116  locale
  117  nano ~/.bashrc 
  118  exit
  119  cd dev
  120  git clone git@github.com:Bank-Builder/ever-wiki.git
  121  sudo apt install git
  122  git clone git@github.com:Bank-Builder/ever-wiki.git
  123  exit
  124  cd dev
  125  chmod +x gp.sh 
  126  ll
  127  git clone git@github.com:Cyber-Mint/cm-caas-ui.git
  128  git clone git@github.com:Cyber-Mint/cm-caas.git
  129  git clone git@github.com:Cyber-Mint/A3S.git
  130  git clone git@github.com:Cyber-Mint/devops.git
  131  git clone git@github.com:Cyber-Mint/a4s.git
  132  ll
  133  ./gp.sh 
  134  cd cm-caas-ui/
  135  docker build . -t caas-ui:latest
  136  sudo groupadd docker
  137  sudo reboot now
  138  docker build . -t caas-ui:latest
  139  cd dev/cm-caas-ui/
  140  cd dev/cm-caas
  141  cd quickstart/docker-compose/
  142  docker build . -t caas-ui:latest
  143  docker-compose pull
  144  docker login -u bankbuilder
  145  docker login -u bankbuilder -p iDockerHub4591860
  146  docker-compose down
  147  docker-compose pull
  148  git checkout 45
  149  git checkout 45-rename-realm-to-zone 
  150  docker-compose pull
  151  docker-compose -a
  152  docker-compose -q
  153  docker-compose ps
  154  docker-compose up -d
  155  docker-compose down
  156  docker-compose -f docker-compose.yaml up -d
  157  docker-compose -f docker-compose.yaml -f docker-compose.build.yaml up -d --build --force-recreate
  158  docker-compose ps
  159  git status
  160  docker build . -t caas-ui:latest
  161  cat Dockerfile 
  162  ls
  163  ll
  164  tree
  165  sudo apt install tree
  166  tree
  167  tree | grep node
  168  docker image prune
  169  docker image list
  170  docker image rm 2001db548671 
  171  docker ps -a
  172  docker stop $(docker ps -a -q)
  173  docker rm $(docker ps -a -q)
  174  docker build . -t caas-ui:latest
  175  sudo snap install postman
  176  postman
  177  sudo snap install postman
  178  cd ..
  179  wget Cannot download "https://github.com/sass/node-sass/releases/download/v4.14.1/linux_musl-x64-72_binding.node": 
  180  sudo apt update
  181  sudo apt dist-upgrade 
  182  wget "https://github.com/sass/node-sass/releases/download/v4.14.1/linux_musl-x64-72_binding.node"
  183  ping -c1 "https://github.com/sass/node-sass/releases/download/v4.14.1/linux_musl-x64-72_binding.node"
  184  ping -c5 https://github-production-release-asset-2e65be.s3.amazonaws.com
  185  ping -c5 github-production-release-asset-2e65be.s3.amazonaws.com
  186  ping -c5 8.8.8.8
  187  ping -c5 github-production-release-asset-2e65be.s3.amazonaws.com
  188  traceroute 52.217.42.236
  189  sudo apt install traceroute
  190  traceroute 52.217.42.236
  191  ping -c5 github-production-release-asset-2e65be.s3.amazonaws.com
  192  traceroute 52.217.42.236
  193  ping -c5 github-production-release-asset-2e65be.s3.amazonaws.com
  194  traceroute 52.217.42.236
  195  ping -c5 github-production-release-asset-2e65be.s3.amazonaws.com
  196  cd cm-caas-ui
  197  ping -c5 github-production-release-asset-2e65be.s3.amazonaws.com
  198  docker build . -t caas-ui:latest
  199  ping -c5 github-production-release-asset-2e65be.s3.amazonaws.com
  200  docker build . -t caas-ui:latest
  201  git pull
  202  git pull
  203  docker build . -t caas-ui:latest
  204  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:latest
  205  docker login -u bankbuilder -p iDockerHub4591860
  206  cat Dockerfile 
  207  docker image ps
  208  docker image list
  209  docker image prune
  210  docker image list
  211  docker image rm b6ecd7809414 2001db548671 6fb07aff1c2e
  212  docker ps
  213  docker rm $(docker ps -a -q)
  214  docker image rm b6ecd7809414 2001db548671 6fb07aff1c2e
  215  docker image list
  216  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:latest
  217  docker run -d -p 5000:80 --name cm-caas-ui caas-ui:latest
  218  docker ps -a
  219  docker ps
  220  git checkout master
  221  docker stop cm-caas-ui
  222  docker run -d -p 5000:80 --name cm-caas-ui caas-ui:latest
  223  docker rm cm-caas-ui 
  224  docker run -d -p 5000:80 --name cm-caas-ui caas-ui:latest
  225  docker stop cm-caas-ui
  226  docker rm cm-caas-ui 
  227  docker build . -t cm-caas-ui:latest
  228  docker ps -a
  229  cd ../cm-caas
  230  git status
  231  git pull
  232  cd quickstart/docker-compose/
  233  docker-compose -f docker-compose.yaml -f docker-compose.build.yaml up -d --build --force-recreate
  234  docker-compose ps
  235  java -version
  236  sudo apt install openjdk-11-jdk openjdk-11-jdk-headless
  237  java -version
  238  docker-compose ps
  239  docker ps
  240  docker-compose down
  241  sudo apt-get install nautilus-share
  242  smbclient --version
  243  sudo apt install smbclient
  244  sudo groupadd samba
  245  sudo adduser user samba
  246  sudo adduser $USER samba
  247  smbclient --version
  248  smbclient -L 10.0.0.120 -U andrew
  249  smbclient -L //10.0.0.120 -U andrew
  250  smbclient -L //10.0.0.120
  251  smbclient -L //10.0.0.5
  252  smbclient -L //10.0.0.120 -U andrew
  253  ip a s
  254  smbclient -L //10.0.0.120/ -U andrew
  255  sudo apt install cifs-utils
  256  smbclient -L //10.0.0.120/ -U andrew
  257  sudo visio
  258  sudo visudo
  259  smbclient -L //10.0.0.120/ -U andrew
  260  id
  261  sudo adduser andrew samba
  262  id
  263  groups
  264  id
  265  gksu gedit /etc/samba/user
  266  sudo gedit /etc/samba/user
  267  sudo reboot
  268  id
  269  smbclient -L //10.0.0.120/ -U andrew
  270  smbclient -L //york.local -U andrew
  271  ping -c1 york.local
  272  sudo nano /etc/samba/smb.conf
  273  sudo systemctl restart smb.service
  274  sudo systemctl stop smb.service
  275  sudo systemctl restart smbd.service
  276  sudo systemctl status smbd
  277  ping -c1 york.local
  278  smbclient -L //york.local -U andrew
  279  smbclient -L //10.0.0.120 -U andrew
  280  sudo apt install samba
  281  smbclient -L //10.0.0.120 -U andrew
  282  sudo systemctl status smbd.service 
  283  smbclient -L //10.0.0.120 -U andrew
  284  sudo nano /etc/samba/smb.conf 
  285  sudo systemctl restart smbd.service 
  286  sudo systemctl status smbd.service 
  287  smbclient -L //10.0.0.120 -U andrew
  288  sudo nano /etc/hosts
  289  smbclient -L //10.0.0.120 -U andrew
  290  sudo nano /etc/hosts
  291  sudo nano /etc/samba/smb.conf 
  292  smbclient -L //catnpi.local -U andrew
  293  smbclient -L //catnip.local -U andrew
  294  sudo nano /etc/samba/smb.conf 
  295  sudo systemctl restart smbd.service 
  296  smbclient -L //catnip.local -U andrew
  297  sudo nano /etc/samba/smb.conf 
  298  sudo systemctl restart smbd.service 
  299  smbclient -L //catnip.local -U andrew
  300  smbclient -L //york.local -U andrew
  301  smbclient -L //10.0.0.120 -U andrew
  302  sudo nano /etc/samba/smb.conf 
  303  sudo systemctl restart smbd.service 
  304  exit
  305  sudo nano /etc/samba/smb.conf 
  306  sudo systemctl restart smbd.service 
  307  sudo nano /etc/hosts
  308  smbclient -L //york.local -U andrew
  309  ip a s
  310  smbclient -L //10.0.0.120 -U andrew
  311  sudo nano /etc/samba/smb.conf 
  312  sudo systemctl restart smbd.service 
  313  smbclient -L //10.0.0.120 -U andrew
  314  smbclient -L //10.0.0.122 -U andrew
  315  smbclient -L //den.local -U andrew
  316  smbclient -L //den.local/omv -U andrew
  317  smb
  318  cd dev/cm-caas-ui
  319  git checkout 43-UI-CRUD-business-functions 
  320  git pull
  321  docker ps
  322  docker image list
  323  docker build . -t cm-caas-ui:latest
  324  docker run -d -p 5000:80 --name cm-caas-ui caas-ui:latest
  325  docker ps
  326  docker stop cm-caas-ui 
  327  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:latest
  328  docker rm $(docker ps -a)
  329  docker rm $(docker ps -a -q)
  330  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:latest
  331  docker stop cm-caas-ui 
  332  docker rm cm-caas-ui 
  333  docker image list
  334  docker image prune
  335  docker image list
  336  docker image rm fdbc77d37cb4 eae34843770e
  337  docker build . -t cm-caas-ui:latest
  338  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:latest
  339  docker rm cm-caas-ui 
  340  docker stop cm-caas-ui 
  341  docker rm cm-caas-ui 
  342  docker build . -t cm-caas-ui:latest
  343  git pull
  344  docker build . -t cm-caas-ui:latest
  345  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:latest
  346  docker ps -a
  347  docker stop cm-caas-ui 
  348  docker rm cm-caas-ui 
  349  docker ps -a
  350  exit
  351  exit
  352  ls /dev/video*
  353  sudo modprobe v4l2loopback video_nr=2 card_label="video2" exclusive_caps=1,1,1,1,1,1,1,1
  354  ls /dev/video*
  355  df -h
  356  df -h | grep ^snap
  357  df -h | grep "^snap"
  358  df -h | grep "snap"
  359  df -h | grep -V snap
  360  df -h | grep -v snap
  361  dfh
  362  smbstatus
  363  sudo smbstatus
  364  sudo smbstatus 10.0.0.120
  365  sudo smbstatus //10.0.0.120
  366  sudo smbstatus
  367  sudo smbclient -L //10.0.0.120
  368  sudo smbclient -L //10.0.0.120 -U andrew
  369  sudo smbclient -m SMB3 -L //10.0.0.120 -U andrew
  370  sudo smbclient -m NT1 -L //10.0.0.120 -U andrew
  371  sudo smbclient -L //10.0.0.120 -N --option='client min protocol = NT1'
  372  sudo smbclient -L //10.0.0.120 -U --option='client min protocol = NT1'
  373  sudo smbclient -L //10.0.0.120 U --option='client min protocol = NT1'
  374  sudo smbclient -L //10.0.0.120 --option='client min protocol = NT1'
  375  sudo apt-get install cifs-utils
  376  sudo apt update
  377  sudo apt upgrade
  378  sudo nano /etc/samba/smb.conf
  379  sudo systemctl restart smbd.service 
  380  sudo systemctl status smbd.service 
  381  sudo smbclient -L //10.0.0.120 -U andrew
  382  sudo smbclient -L //10.0.0.5 -U andrew
  383  pvs
  384  sudo pvs
  385  sudo pvdisplay
  386  sudo vgs
  387  sudo lvdisplay
  388  sudo lvs
  389  sudo fdisk -l
  390  sudo fdisk -l | grep '^Disk /dev/'
  391  sudo lvmdiskscan
  392  sudo pvcreate /dev/sdb
  393  lsblk
  394  sudo lvmdiskscan
  395  lsblk
  396  sudo pvcreate /dev/sdb
  397  sudo wipefs -a /dev/sdb 
  398  sudo pvcreate /dev/sdb
  399  lsblk
  400  sudo lvmdiskscan
  401  sudo lvs
  402  sudo lvdisplay
  403  sudo vgextend vgubuntu /dev/sdb
  404  sudo lvm lvextend -l +100%FREE /dev/vgubuntu/root 
  405  sudo resize2fs /dev/vgubuntu/root
  406  df -h
  407  history
  408  df -h
  409  df -h | grep -v snap
  410  cd dev/ever-wiki/
  411  git status
  412  git add .
  413  git commit -m "add a HDD to a lvm vg'
  414  git commit -m "add a HDD to a lvm vg"
  415  git push
  416  git add .
  417  git commit -m "add a HDD to a lvm vg"
  418  git push
  419  sudo mv ~/Downloads/Coinomi /opt/
  420  ls /opt
  421  cd /opt/Coinomi/
  422  ll
  423  cp coinomi-wallet.desktop /usr/share/applications/.
  424  sudo cp coinomi-wallet.desktop /usr/share/applications/.
  425  cat coinomi-wallet.desktop 
  426  ll
  427  sudo nano /usr/share/applications/coinomi-wallet.desktop 
  428  ls /usr/share/applications/
  429  cat stacer.desktop
  430  sudo cat stacer.desktop
  431  sudo cat /usr/share/applications/stacer.desktop 
  432  sudo nano /usr/share/applications/coinomi-wallet.desktop 
  433  ll
  434  sudo chmod +x Coinomi 
  435  ll
  436  ./Coinomi 
  437  cd ..
  438  rm -rf Coinomi/
  439  sudo rm -rf Coinomi/
  440  sudo mv ~/Downloads/Coinomi/ .
  441  ll
  442  cd Coinomi/
  443  ll
  444  cat coinomi-wallet.desktop 
  445  rm /usr/share/applications/coinomi-wallet.desktop 
  446  sudo rm /usr/share/applications/coinomi-wallet.desktop 
  447  sudo cp coinomi-wallet.desktop /usr/share/applications/coinomi-wallet.desktop 
  448  sudo nano /usr/share/applications/coinomi-wallet.desktop 
  449  sudo apt install gimp
  450  sudo cp ~/Pictures/coinomi-logo.png .
  451  sudo nano /usr/share/applications/coinomi-wallet.desktop 
  452  lsusb
  453  sudo apt install bluetooth
  454  sudo apt install blueman
  455  sudo apt install bluez
  456  hcitool lescan
  457  sudo hcitool lescan
  458  sudo hcitool
  459  sudo hcitool leinfo
  460  sudo hcitool lescan
  461  sudo hcitool lescan --help
  462  sudo hcitool lescan --discovery=g
  463  sudo hcitool lescan --discovery
  464  sudo hcitool lescan --passive
  465  sudo hcitool scan
  466  sudo hcitool lescan
  467  lsmod |grep blue
  468  btusb
  469  rfkill list
  470  bluetoothctl
  471  sudo modprobe -r btusb && sleep 20 && sudo modprobe btusb
  472  cd dev
  473  cd ever-wiki/
  474  git status
  475  git add .
  476  git commit -m "bluetooth failure"
  477  git push
  478  sudo apt update
  479  sudo apt autoremove
  480  exit
  481  cd dev/ever-wiki/
  482  cd wiki
  483  mkdir cryptography
  484  touch openssl.md
  485  rm openssl.md 
  486  touch cryptography/openssl.md
  487  cd ../..
  488  cd ever-wiki/
  489  git add .
  490  git commit -m "openSSL signing"
  491  git push
  492  cd ..
  493  cd cm-caas
  494  cd ../cm-caas-ui/
  495  git fetch --all
  496  git pull --all
  497  git checkout master
  498  git fetch --all
  499  git pull --all
  500  git checkout 15-Realm-Crud-Implementation 
  501  git pull
  502  docker build . -t cm-caas-ui:andrew
  503  sudo apt update
  504  reset
  505  git pull
  506  docker build . -t cm-caas-ui:andrew
  507  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
  508  cat Dockerfile 
  509  info aria
  510  man aria
  511  cd dev
  512  virtualenv venv
  513  sudo apt install python3-virtualenv
  514  virtualenv venv
  515  ll
  516  decativate
  517  deactivate
  518  rm venv/
  519  rm -rf venv/
  520  mkdir license
  521  cd license
  522  virtualenv venv
  523  source venv/bin/activate
  524  pip install flask flask-jsonify flask-sqlalchemy flask-restful
  525  pip install flask flask-jsonpify flask-sqlalchemy flask-restful
  526  pip freeze
  527  nano licesne.py
  528  sqlite3 chinook.db 
  529  sudo apt install sqlite3
  530  sqlite3 chinook.db 
  531  python licesne.py 
  532  nano licesne.py
  533  pip install flask flask-jsonpify flask-sqlalchemy flask-restful
  534  nano licesne.py
  535  python licesne.py 
  536  pip install flask flask-jsonpify flask-sqlalchemy flask-restful
  537  ll
  538  pip install flask flask-jsonpify flask-sqlalchemy flask-restful --reinstall
  539  pip install flask flask-jsonpify flask-sqlalchemy flask-restful
  540  pip freeze
  541  pip freeze > requirements.txt
  542  python licesne.py 
  543  cat requirements.txt 
  544  nano licesne.py 
  545  pip freeze
  546  python licesne.py 
  547  nano licesne.py 
  548  sudo apt-get install sqlitebrowser
  549  sqlitebrowser 
  550  cd dev/cm-caas
  551  git branch 000-update-security-contract
  552  git checkout 000-update-security-contract 
  553  git status
  554  git add .
  555  git commit -m "updated security contract to be consistent with plurals"
  556  git push
  557  git push --set-upstream origin 000-update-security-contract 
  558  cd ..
  559  cd cm-caas-ui
  560  git status
  561  git checkout master
  562  git pull
  563  docker build . -t cm-caas-ui:andrew
  564  git commit -m "add ldap permissions to security contract"
  565  git add .
  566  git push
  567  git status
  568  git commit -m "add ldap permissions to security contract"
  569  git push
  570  git status
  571  git add .
  572  git commit -m "updated security contract for cm-caas-ui"
  573  git push
  574  docker stop $(docker ps -a -q)
  575  docker rm $(docker ps -a -q)
  576  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
  577  echo $ENV
  578  exit
  579  sqlite3 license.db
  580  ll
  581  sqlite3
  582  sqlite2 license.db .load < license.sql
  583  sqlite2 license.db < license.sql
  584  sqlite3 license.db < license.sql
  585  sqlite3
  586  ll
  587  rm chinook.d*
  588  rm license.db
  589  ll
  590  sqlite3 license.db < license.sql 
  591  sqlite3 license.db
  592  ll
  593  sqlite3 license.db < license.sql 
  594  sqlite3 license.db
  595  sqlite3 license.db < license.sql 
  596  rm license.db
  597  sqlite3 license.db < license.sql 
  598  ll
  599  sqlite3 license.db
  600  ll
  601  rm *.db
  602  ll
  603  mv licesne.py license.py
  604  ll
  605  python license.py
  606  source venv/bin/activate
  607  python license.py
  608  ll
  609  rm license.db
  610  python license.py
  611  ll
  612  sqlite3 license.db < license.sql
  613  ll
  614  sqlite3 license.db
  615  python license.py
  616  rm license.db
  617  sqlite license.db
  618  sqlite3 license.db
  619  sqlite3 license.db < license.sql
  620  python license.py
  621  exit
  622  nano todo.py
  623  deaactivate
  624  deactivate
  625  cd..
  626  cd ..
  627  mkdir microblog
  628  cd microblog 
  629  source venv/bin/activate
  630  virtualenv venv
  631  ll
  632  source venv/bin/activate
  633  nkdir app
  634  mkdir app
  635  nano app/__init__.py
  636  nano app/routes.py
  637  ll
  638  tree
  639  tree app
  640  touch microblog.py
  641  export FLASK_APP=microblog.py
  642  flask run
  643  pip install flask
  644  flask run
  645  docker ps -a
  646  docker stop cm-caas-ui 
  647  docker rm cm-caas-ui 
  648  flask run
  649  pip install python-dotenv
  650  nano .flaskenv
  651  flask run
  652  mkdir app/templates
  653  nano app/templates
  654  tree app
  655  flask run
  656  mv app/templates/index.html app/templates/base.html
  657  flask run
  658  pip install flask-wtf
  659  pip freeze
  660  touch config.py
  661  nano config.py
  662  python
  663  SECRET_KEY="lll"
  664  python
  665  export SECRET_KEY="lll"
  666  python
  667  touch app/forms.py
  668  touch app/templates/login.html
  669  flask run
  670  pip install flask-sqlalchemy
  671  pip install flask-migrate
  672  touch app/models.py
  673  python
  674  flask db init
  675  tree migrations
  676  flask db migrate -m "Initial Migration"
  677  ll
  678  sqlite app.db
  679  sqlite3 app.db
  680  flask db migrate -m "Added post table with join to user.id"
  681  flask db upgrade
  682  flask db migrate -m "Added post table with join to user.id"
  683  flask db upgrade
  684  sqlite2 app.db
  685  sqlite3 app.db
  686  python
  687  flask db migrate -m "Added db.relationship"
  688  flask db upgrade
  689  python
  690  rm add.db
  691  flask db init
  692  rm app.db
  693  flask db init
  694  flask db downgrade
  695  rm app.db
  696  ll
  697  flask db init
  698  flask db migrate
  699  cd migrations/
  700  LL
  701  ll
  702  cd versions/
  703  ll
  704  rm 4c352758c747_added_post_table_with_join_to_user_id.py f9b10c8d7711_initial_migration.py 
  705  cd ../..
  706  flask db init
  707  ll
  708  rm -rf migrations/
  709  flask db init
  710  flask db update
  711  flask db upgrade
  712  python
  713  flask db migrate
  714  flask db upgrade
  715  python
  716  flask shell
  717  touch README.md
  718  nano README.md 
  719  ll
  720  python
  721  flask shell
  722  pip install flask-login
  723  sudo apt update -y && sudo apy -y upgrade
  724  sudo apt update -y && sudo apt -y upgrade
  725  sudo apt update -y && sudo apt -y upgrade && sudo apt autoremove
  726  sudo shutdown
  727  ip a s 
  728  ip a s enp2s0
  729  ip a s enp2s0 inet
  730  ip a s inet enp2s0
  731  ip a s enp2s0
  732  ip a s enp2s0 | grep inet
  733  nmcli dev list iface eth0 | grep IP4
  734  ip addr
  735  ip -o -f inet addr show | awk '/scope global/ {print $2,$4,$6}'
  736  wmic
  737  route -n | grep 'UG[ \t]' | awk '{print $2}'
  738  sudo apt install net-tools
  739  netstat -rn
  740  route -n | grep 'UG[ \t]' | awk '{print $2}'
  741  ip route show 0.0.0.0/0 dev eth0 | cut -d\  -f3
  742  ip -o -f inet addr show | awk '/scope global/ {print $2,$4,$6}'
  743  ip route show 0.0.0.0/0 dev enp2s0 | cut -d\  -f3
  744  curl ifconfig.me
  745  sudo apt install curl
  746  curl ifconfig.me
  747  curl ifconfig.me/all
  748  $ cat /etc/resolv.conf 
  749  grep "nameserver" /etc/resolv.conf
  750  less /etc/resolv.conf
  751  systemd-resolve --status
  752  systemd-resolve --status | grep DNS
  753  systemd-resolve --status | grep "Current DNS"
  754  systemd-resolve --status enp2s0 | grep "Current DNS"
  755  systemd-resolve --status enp2s0
  756  systemd-resolve --status enp2s0 | grep "Current DNS"
  757  echo $PATH
  758  pi
  759  myip
  760  nano myip.sh
  761  chmod +x myip.sh 
  762  ./myip.sh 
  763  nano myip.sh
  764  ll
  765  ./myip.sh 
  766  nano myip.sh
  767  ./myip.sh 
  768  mkdir dev/myip
  769  cd dev
  770  rm myip
  771  rm -rf myip/
  772  git clone git@github.com:Bank-Builder/myip.git
  773  cd myip
  774  git mv ~/myip.sh .
  775  mv ~/myip.sh .
  776  nano myip.sh
  777  sudo cp myip.sh /usr/bin/myip
  778  myip
  779  git status
  780  git add .
  781  git commit -m "Initial commit"
  782  git push
  783  git add .
  784  git commit -m "Initial commit"
  785  git push
  786  git add .
  787  git commit -m "Initial commit"
  788  git push
  789  ./myip.sh 
  790  cat myip.sh 
  791  git add .
  792  git commit -m "Initial commit"
  793  git push
  794  sudo cp myip.sh /usr/bin/myip
  795  cd ..
  796  sudo cp myip/myip.sh  /usr/bin/myip
  797  sudo chmod +x /usr/bin/myip
  798  rm -rf myip/
  799  myip
  800  git clone git@github.com:Bank-Builder/myip.git
  801  cd myip/
  802  git add .
  803  git commit -m "Updated README.md"
  804  git push
  805  ./myip.sh 
  806  git add .
  807  git commit -m "Updated README.md"
  808  git push
  809  cd ..
  810  sudo cp myip/myip.sh  /usr/bin/myip
  811  sudo chmod +x /usr/bin/myip
  812  myip
  813  ll
  814  nano .bashrc
  815  sudo chmod +x /usr/bin/myip
  816  exit
  817  exit
  818  cd dev
  819  wget -O hello-2.10.tar.gz "http://ftp.gnu.org/gnu/hello/hello-2.10.tar.gz"
  820  tar xf hello-2.10.tar.gz 
  821  cd hello-2.10/
  822  ll
  823  cd ..
  824  rm -rf hello-2.10/
  825  ll
  826  rm hello-2.10.tar.gz 
  827  ll
  828  rm linux_musl-x64-72_binding.node 
  829  ll
  830  cd www/
  831  ll
  832  cat index.html 
  833  cd ..
  834  tree www
  835  cat www/www/index.html 
  836  rm -rf www/
  837  ll
  838  echo "$(tput setaf 1)Hello, world$(tput sgr0)"
  839  echo "$(tput setaf 2)Hello, world$(tput sgr0)"
  840  echo "$(tput setaf 3)Hello, world$(tput sgr0)"
  841  echo "$(tput setaf 4)Hello, world$(tput sgr0)"
  842  echo "$(tput setaf 5)Hello, world$(tput sgr0)"
  843  echo "$(tput setaf 6)Hello, world$(tput sgr0)"
  844  echo "$(tput setaf 7)Hello, world$(tput sgr0)"
  845  echo "$(tput setaf 8)Hello, world$(tput sgr0)"
  846  echo "$(tput setaf 9)Hello, world$(tput sgr0)"
  847  echo "$(tput setaf 10)Hello, world$(tput sgr0)"
  848  echo "$(tput setaf 11)Hello, world$(tput sgr0)"
  849  echo "$(tput setaf 12)Hello, world$(tput sgr0)"
  850  echo "$(tput setaf 13)Hello, world$(tput sgr0)"
  851  echo "$(tput setaf 14)Hello, world$(tput sgr0)"
  852  echo "$(tput setaf 15)Hello, world$(tput sgr0)"
  853  echo "$(tput setaf 16)Hello, world$(tput sgr0)"
  854  echo "$(tput setaf 17)Hello, world$(tput sgr0)"
  855  echo "$(tput setaf 18)Hello, world$(tput sgr0)"
  856  echo "$(tput setaf 19)Hello, world$(tput sgr0)"
  857  echo "$(tput setaf 20)Hello, world$(tput sgr0)"
  858  echo "$(tput setaf 21)Hello, world$(tput sgr0)"
  859  echo "$(tput setaf 22)Hello, world$(tput sgr0)"
  860  echo "$(tput setaf 23)Hello, world$(tput sgr0)"
  861  echo "$(tput setaf 24)Hello, world$(tput sgr0)"
  862  echo "$(tput setaf 25)Hello, world$(tput sgr0)"
  863  echo "$(tput setaf 26)Hello, world$(tput sgr0)"
  864  echo "$(tput setaf 27)Hello, world$(tput sgr0)"
  865  echo "$(tput setaf 28)Hello, world$(tput sgr0)"
  866  echo "$(tput setaf 29)Hello, world$(tput sgr0)"
  867  echo "$(tput setaf 30)Hello, world$(tput sgr0)"
  868  echo "$(tput setaf 230)Hello, world$(tput sgr0)"
  869  echo "$(tput setaf 255)Hello, world$(tput sgr0)"
  870  echo "$(tput setaf 254)Hello, world$(tput sgr0)"
  871  echo "$(tput setaf 63)Hello, world$(tput sgr0)"
  872  echo "$(tput setaf 30)Hello, world$(tput sgr0)"
  873  RED='\033[0;31m'
  874  NC='\033[0m'
  875  printf "I ${RED}love${NC} Stack Overflow\n"
  876  echo -e "I ${RED}love${NC} Stack Overflow"
  877  man tput
  878  cd dev/color_bash/
  879  bash color_bash.sh 
  880  exit
  881  cd dev/color_bash/
  882  bash color_bash.sh 
  883  touch ~/dev/ever-wiki/linux/bash-tips.md
  884  touch ~/dev/ever-wiki/wiki/linux/bash-tips
  885  cd ..
  886  rm -rf color_bash/
  887  cd ever-wiki/
  888  git status
  889  git add .
  890  git commit -m "Example of bash esc color codes"
  891  git push
  892  cd wiki/linux
  893  ll
  894  mv bash-tips bash-tips.md
  895  cd ../..
  896  git add .
  897  git commit -m "Example of bash esc color codes"
  898  git push
  899  git add .
  900  git commit -m "Example of bash esc color codes"
  901  git push
  902  du
  903  du --help
  904  free
  905  htop
  906  sudo apt install htop
  907  htop
  908  sudo apt install figlet toilet
  909  telnet towel.blinkenlights.nl
  910  rev telnet towel.blinkenlights.nl
  911  rev
  912  sudo apt install cmatrix
  913  sudo apt-get install libaa-bin
  914  aafire
  915  myip
  916  cmatrix
  917  exit
  918  exit
  919  exit
  920  sudo apt-get install ntfs-3g
  921  lsusb
  922  clear
  923  which myip
  924  cat /usr/bin/myip
  925  systemd-resolve --status $DEV | grep "Current DNS" | awk '{print $4}'
  926  cd dev/microblog/
  927  source venv/bin/activate
  928  ll
  929  cd dev/microblog/
  930  ll
  931  source venv/bin/activate
  932  python
  933  flask run
  934  python
  935  flask --help
  936  flask shell
  937  flask migrate
  938  flask db migrate
  939  flask db upgrade
  940  flask shell
  941  touch app/forms.py
  942  pip install email-validator
  943  pip freeze
  944  touch app/templates/register.html
  945  flask run
  946  pip freeze requirements.txt
  947  pip install -r requirements.txt
  948  pip freeze > requirements.txt
  949  pip install -r requirements.txt
  950  touch app/templates/user.html
  951  flask run
  952  flask shell
  953  clear
  954  flask run
  955  touch app/templates/_post.html
  956  flask db migrate -m "new fields in user model"
  957  flask db upgrade
  958  flask run
  959  flask db migrate -m "new fields in user model"
  960  flask db upgrade
  961  touch app/templates/edit_profile.html
  962  flask run
  963  export FLASK_DEBUG=1
  964  flask run
  965  export FLASK_DEBUG=0
  966  touch app/errors.py
  967  flask run
  968  touch app/templates/404.html
  969  touch app/templates/500.html
  970  python -m smtpd -n -c DebuggingServer localhost:8025
  971  source venv/bin/activate
  972  flask run
  973  export MAIL_SERVER=localhost
  974  export MAIL_PORT=8025
  975  flask run
  976  export MAIL_PORT=
  977  export MAIL_SERVER=
  978  flask run
  979  fask db migrate -m "followers"
  980  flask db migrate -m "followers"
  981  flask db upgrade
  982  nano tests.py
  983  python tests.py 
  984  flask run
  985  python
  986  flask run
  987  pip install flask-mail
  988  pip freeze > requirements.txt
  989  pip install -r requirements.txt
  990  pip install pyjwt
  991  pip freeze > requirements.txt
  992  pip install pyjwt
  993  pip install -r requirements.txt
  994  python -m smtpd -n -c DebuggingServer localhost:8025
  995  export MAIL_SERVER=localhost
  996  export MAIL_PORT=8025
  997  flask shell
  998  export MAIL_SERVER=localhost
  999  export MAIL_PORT=8025
 1000  python -m smtpd -n -c DebuggingServer localhost:8025
 1001  python -m smtpd -n -c DebuggingServer localhost:25
 1002  quit()
 1003  flask shell
 1004  ll
 1005  cd logs
 1006  ll
 1007  cat microblog.log 
 1008  exit
 1009  export MAIL_SERVER=localhost
 1010  export MAIL_PORT=8025
 1011  cat logs/microblog.log 
 1012  touch app/email.py
 1013  touch app/templates/reset_password.html
 1014  flask shell
 1015  flask run
 1016  exit
 1017  flask run
 1018  mv app/templates/reset_password.html app/templates/reset_password_request.html
 1019  flask run
 1020  flask shell
 1021  python
 1022  cd app/templates/
 1023  mkdir email
 1024  mv reset_password.* email/.
 1025  ll
 1026  touch reset_password.html
 1027  flask shell
 1028  flask run
 1029  echo $MAIL_SERVER
 1030  echo $MAIL_PORT
 1031  flask run
 1032  pip install flask-bootstrap
 1033  cd ../..
 1034  pip freeze > requirements.txt 
 1035  flask run
 1036  pip install flask-moment
 1037  flask run
 1038  python -m smtpd -n -c DebuggingServer localhost:8025
 1039  sudo apt install aspell-uk
 1040  sudo apt install aspell-en
 1041  sudo apt-get install language-pack-en language-pack-en-base manpages
 1042  cd dev/cm-caas
 1043  git status
 1044  git checkout master
 1045  git pull
 1046  cd ..
 1047  cd cm-caas-ui/
 1048  git status
 1049  git fetch --all
 1050  git pull --all
 1051  git checkout 49-UI-CRUD-users 
 1052  docker build . -t cm-caas-ui:andrew
 1053  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1054  docker save cm-caas-ui:andrew > aaa.tar
 1055  ll
 1056  docker load < aaa.tar 
 1057  docker image list
 1058  docker load --help
 1059  docker save --help
 1060  docker image prune
 1061  docker image list
 1062  docker image rm cm-caas-ui:latest cm-caas-ui:andrew 
 1063  docker rm $(docker ps -a -q)
 1064  docker stop $(docker ps -a -q)
 1065  docker rm $(docker ps -a -q)
 1066  docker image rm cm-caas-ui:latest cm-caas-ui:andrew 
 1067  docker image list
 1068  docker load < aaa.tar 
 1069  docker image list
 1070  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1071  docker stop $(docker ps -a -q)
 1072  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1073  docker start $(docker ps -a -q)
 1074  docker stop $(docker ps -a -q)
 1075  docker rm $(docker ps -a -q)
 1076  exit
 1077  cd dev/cm-caas-ui/
 1078  git status
 1079  rm aaa.tar
 1080  git pull
 1081  docker build . -t cm-caas-ui:andrew
 1082  docker build . -t cm-caas-ui:andrew
 1083  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1084  docker stop $(docker ps -a -q)
 1085  docker rm $(docker ps -a -q)
 1086  exit
 1087  sudo apt-get install mesa-utils
 1088  sudo apt-get install glmark2
 1089  glxgears
 1090  glmark2
 1091  sudo apt update
 1092  sudo apt upgrade
 1093  sudo apt autoremove
 1094  sudo reboot now
 1095  snap install shotcut --classic
 1096  sudo apt install openshot
 1097  sudo add-apt-repository ppa:openshot.developers/ppa
 1098  sudo apt purge openshot
 1099  sudo apt install openshot-qt
 1100  sudo apt update
 1101  sudo apt upgrade
 1102  cd dev/cm-caas
 1103  ll
 1104  git status
 1105  git fetch --all
 1106  git pull --all
 1107  git checkout 000
 1108  git checkout 000-update-security-contract 
 1109  git pull
 1110  docker-compose -f docker-compose.yaml up -d
 1111  cd quickstart/docker-compose/
 1112  docker-compose -f docker-compose.yaml up -d
 1113  docker-compose -f docker-compose.yaml -f docker-compose.build.yaml up -d --build --force-recreate
 1114  git branch 
 1115  docker ps -a
 1116  nan0 ../../postman/cm-caas.postman_collection.json 
 1117  nano ../../postman/cm-caas.postman_collection.json 
 1118  nano /etc/hosts
 1119  cat /etc/hosts
 1120  sudo nano /etc/hosts
 1121  ping as3-identity-server -c 1
 1122  docker ps -a
 1123  sudo nano /etc/hosts
 1124  ping a3s
 1125  ping a3s.local
 1126  sudo nano /etc/hosts
 1127  ping a3s -c1
 1128  ip s a
 1129  ip a s
 1130  postman
 1131  ping a3s-identity-server
 1132  ping turpin.co.za
 1133  sudo dhclient -v -4
 1134  ping a3s-identity-server
 1135  ping turpin.co.za
 1136  ping a3s
 1137  ping catnip
 1138  ping catnip.local
 1139  sudo reboot now
 1140  ping catnip.local -c1
 1141  ping a3s
 1142  cat /etc/hosts
 1143  ping as3
 1144  cat /etc/hosts
 1145  sudo nano /etc/hosts
 1146  ping as3
 1147  ping a3s-identity-server
 1148  cd dev/cm-caas
 1149  cd quickstart/docker-compose/
 1150  docker-compose -f docker-compose.yaml -f docker-compose.build.yaml up -d --build --force-recreate
 1151  cd ../../..
 1152  cd cm-caas-ui/
 1153  git status
 1154  git pull
 1155  docker build . -t cm-caas-ui:andrew
 1156  cd dev/cm-caas-ui/
 1157  docker build . -t cm-caas-ui:andrew
 1158  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1159  docker stop $(docker ps -a -q)
 1160  docker rm $(docker ps -a -q)
 1161  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1162  sudo apt update
 1163  sudo apt upgrade
 1164  cd dev
 1165  ll
 1166  git clone git@github.com:Bank-Builder/checkcert.git
 1167  cd checkcert/
 1168  git pull
 1169  ./install
 1170  bash ./install.sh 
 1171  checkcert --help
 1172  checkcert -w cyber-mint.com -x
 1173  checkcert -w cyber-mint.com
 1174  checkcert --version
 1175  checkcert --help
 1176  ll
 1177  cd ..
 1178  checkcert --help
 1179  checkcert --version
 1180  checkcert
 1181  checkcert --expired
 1182  sudo update-ca-certificates
 1183  checkcert --expired
 1184  sudo dpkg-reconfigure ca-certificates
 1185  checkcert --expired
 1186  openssl ca -revoke /etc/ssl/certs/java
 1187  cat /etc/ca-certificates.conf
 1188  cd python
 1189  mkdir python
 1190  cd python
 1191  python -m http.server 900
 1192  touch a.py
 1193  venv venv
 1194  python -m venv
 1195  python -m venv ~/dev/python
 1196  sudo apt-get install python3-venv
 1197  python -m venv ~/dev/python
 1198  source bin/activate
 1199  exit
 1200  python -m http.server 9000
 1201  ll
 1202  cat pyvenv.cfg 
 1203  cd ..
 1204  rm -rf python/
 1205  git clone git@github.com:Cyber-Mint/py_app_package.git
 1206  cd py_app_package/
 1207  git status
 1208  touch run.py
 1209  touch config.py
 1210  mkdir app
 1211  cd    app
 1212  touch __init__.py
 1213  mkdir templates
 1214  mkdir static
 1215  mkdir module_one
 1216  cd    module_one
 1217  touch __init__.py
 1218  touch controllers.py
 1219  touch models.py
 1220  cd    ../templates
 1221  mkdir module_one
 1222  cd    module_one
 1223  touch hello.html
 1224  cd ../..
 1225  cd ..
 1226  ll
 1227  tree
 1228  mv README.md README.rst
 1229  ll
 1230  touch setup.py
 1231  nano setup.py 
 1232  pip install .
 1233  pip install -e .
 1234  python
 1235  tree
 1236  nano init
 1237  python
 1238  pip install -e .
 1239  nano __init__.py
 1240  tree
 1241  cat __init.pt
 1242  cat __init.py
 1243  cat __init__.py
 1244  ll
 1245  cat init
 1246  mv init __init__.py
 1247  pip install -e .
 1248  python
 1249  ll
 1250  cat __init__.py 
 1251  nano __init__.py 
 1252  pip install -e .
 1253  python
 1254  ll
 1255  mv __init__.py app/.
 1256  ll
 1257  pip install -e .
 1258  python
 1259  tree
 1260  touch app/alive.py
 1261  nano app/alive.py
 1262  nano app/__init__.py 
 1263  tree
 1264  nano app/__init__.py 
 1265  pip install -e .
 1266  python
 1267  nano app/alive.py
 1268  pip install -e .
 1269  python
 1270  nano setup.py 
 1271  python setup.py develop
 1272  nano .gitignore 
 1273  python -m venv ~/dev/py_app_package
 1274  source bin/activate
 1275  source bin/activate
 1276  python setup.py develop
 1277  nano setup.py 
 1278  cd dev/cm-caas-ui
 1279  git pull
 1280  git status
 1281  docker build . -t cm-caas-ui:andrew
 1282  docker stop $(docker ps -q -a)
 1283  docker rm  $(docker ps -q -a)
 1284  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1285  git status
 1286  git log
 1287  git pull
 1288  cd ..
 1289  rm -rf cm-caas-ui/
 1290  git clone git@github.com:Cyber-Mint/cm-caas-ui.git
 1291  docker stop $(docker ps -q -a)
 1292  docker rm $(docker ps -q -a)
 1293  docker image prune
 1294  docker image
 1295  docker image list
 1296  docker build . -t cm-caas-ui:andrew
 1297  exit
 1298  cd cm-caas-ui/
 1299  docker build . -t cm-caas-ui:andrew
 1300  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1301  git log
 1302  git checkout 49-UI-CRUD-users 
 1303  git pull
 1304  time docker build . -t cm-caas-ui:andrew
 1305  git status
 1306  git log
 1307  reset
 1308  time docker build . -t cm-caas-ui:andrew
 1309  docker build . -t cm-caas-ui:andrew
 1310  tree
 1311  ll
 1312  cd components/Users/
 1313  ll
 1314  nano UserCreate.vue 
 1315  cd ../..
 1316  docker image prune
 1317  docker sstop $(docker ps -q -q)
 1318  docker sstop $(docker ps -a -q)
 1319  docker stop $(docker ps -a -q)
 1320  docker rm $(docker ps -a -q)
 1321  git pull
 1322  time docker build . -t cm-caas-ui:andrew
 1323  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1324  cd dev/py_app_package/
 1325  source bin/activate
 1326  tree
 1327  reset
 1328  tree
 1329  tree -P share
 1330  tree -I share
 1331  tree -I share|lib
 1332  tree -I "share/|lib/"
 1333  tree -I "share|lib"
 1334  tree -I "share|lib|bin"
 1335  tree -I "share|lib|bin|*.egg-info"
 1336  tree -I "share|lib|bin|*.egg-info|lib64"
 1337  tree -I "share|lib|bin|*.egg-info|lib64|__pycache__"
 1338  python setup.py develop
 1339  pip freeze
 1340  python
 1341  python install -e py_app_package
 1342  python install -e .
 1343  python setup.py develop
 1344  python
 1345  touch MANIFEST.in
 1346  nano MANIFEST.in 
 1347  mkdir app/tests
 1348  touch app/tests/test_say_hello.py
 1349  pip install nose
 1350  nosetests
 1351  python setup.py test
 1352  pip install tox
 1353  pip3 install tox
 1354  pip remove tox
 1355  pip uninstall tox
 1356  pip3 uninstall tox
 1357  pip3 install tox
 1358  pip --verions
 1359  pip --version
 1360  touch tox.ini
 1361  python --version
 1362  tox-quickstart
 1363  ll
 1364  cat tox-generated.ini 
 1365  cat tox.ini 
 1366  rm tox-generated.ini 
 1367  ll
 1368  tox
 1369  python
 1370  cd ..
 1371  python tst.py 
 1372  mkdir tmp
 1373  venv tmp
 1374  python -m venv tmp
 1375  ll
 1376  mv tst.py tmp/.
 1377  cd tmp
 1378  ll
 1379  pip3 install contextlib
 1380  pip3 install io
 1381  python tst.py
 1382  deactivate
 1383  source bin/activate
 1384  nano tst.py 
 1385  python tst.py
 1386  nano tst.py 
 1387  python tst.py
 1388  nano tst.py 
 1389  cd dev/py_app_package/
 1390  source bin/activate
 1391  touch app/app_cli.py
 1392  cat ../tmp/tst.py 
 1393  tox
 1394  app-cli
 1395  app_cli
 1396  python setup -e
 1397  python setup -e .
 1398  python install -e .
 1399  python install -e ./
 1400  python install .
 1401  python setup -e .
 1402  python setup.py -e .
 1403  pip3 install -e .
 1404  app-cli
 1405  pip3 install -e .
 1406  app-cli
 1407  tox
 1408  pip3 install -e .
 1409  app-cli
 1410  tox
 1411  python setup.py .
 1412  pip3 install -e .
 1413  python setup.py develop
 1414  pip3 freeze > requirements.txt
 1415  pip3 install requirements.txt 
 1416  pip3 install 
 1417  pip3 install -r requirements.txt 
 1418  fit status
 1419  git status
 1420  git add .
 1421  tree lib64
 1422  tree -x lib64
 1423  ls lib64/
 1424  ls lib64/python3.8/
 1425  ls lib64/python3.8/site-packages/
 1426  nano .gitignore 
 1427  git status
 1428  git remove lib64
 1429  git reset lib64
 1430  git status
 1431  git reset bin
 1432  git status
 1433  cat src/py-app-package/README.md 
 1434  rm -rf src/
 1435  git status
 1436  ll
 1437  git status
 1438  ll
 1439  git reset src
 1440  git commit -m "Initial commit"
 1441  git push
 1442  rm -rf man/
 1443  git add .
 1444  git status
 1445  git reset bin
 1446  git reset lib64
 1447  git status
 1448  git commit -m "Initial commit"
 1449  git push
 1450  ll
 1451  git status
 1452  git rm --cached
 1453  git rm --cached lib64/
 1454  git rm --cached lib64
 1455  git status --ignored
 1456  git rm --cached /lib64
 1457  git rm --cached ./lib64
 1458  git rm --cached lib64/
 1459  git rm --cached lib64
 1460  git status --ignored
 1461  git rm lib64
 1462  git rm -r -n lib64
 1463  git rm -r -n lib64/
 1464  git rm -r -n ./lib64
 1465  git rm -r -n lib64/
 1466  rm -rf lib64/
 1467  git status --ignored
 1468  git add .gitignore app/app_cli.py 
 1469  git commit -m "Initial commit"
 1470  git push
 1471  cd ...
 1472  deactivate
 1473  cd ..
 1474  rm -rf py_app_package/
 1475  git clone git@github.com:Cyber-Mint/py_app_package.git
 1476  cd py_app_package/
 1477  python -m venv ~/dev/py_app_package
 1478  source bin/activate
 1479  git status
 1480  git reset lib64
 1481  git status
 1482  which pip
 1483  which pip3
 1484  deactivate
 1485  python3 -m venv ~/dev/py_app_package -p python3
 1486  python3 -m venv ~/dev/py_app_package 
 1487  source bin/activate
 1488  pip list
 1489  pip3 list
 1490  git status
 1491  pip install -e .
 1492  ll
 1493  app-cli
 1494  python
 1495  python setup.py --help-commands
 1496  python setup.py clean
 1497  ll
 1498  git status --porcelain | grep '^??' | sed 's/^?? //'
 1499  git status --porcelain
 1500  git status --porcelain | grep '^??' | sed 's/^?? //'
 1501  git check-ignore
 1502  git check-ignore -v .
 1503  git rm -r --cached .
 1504  git status
 1505  git add .
 1506  git status
 1507  ll
 1508  rm run.py
 1509  cd app
 1510  rm -rf module_one/
 1511  rm -rf templates/
 1512  git status
 1513  git add module_one templates ../run.py 
 1514  cd ..
 1515  git status
 1516  git reset lib64
 1517  git status
 1518  git commit -m "Initial commit"
 1519  git push
 1520  vox
 1521  tox
 1522  tox
 1523  pip install tox
 1524  pip3 install tox
 1525  tox
 1526  pip3 install -e .
 1527  pip3 list
 1528  app-cli
 1529  pip3 install .
 1530  pip3 install -e .
 1531  pip install wheel
 1532  pip3 install .
 1533  ll
 1534  cxd py_app_package.egg-info/
 1535  cd py_app_package.egg-info/
 1536  ll
 1537  cd..
 1538  cd ..
 1539  ls
 1540  ll
 1541  cd share
 1542  ll
 1543  cd python-wheels/
 1544  ll
 1545  which pip
 1546  /home/andrew/dev/py_app_package/bin/pip
 1547  /home/andrew/dev/py_app_package/bin/pip --version
 1548  which pip3
 1549  /home/andrew/dev/py_app_package/bin/pip3 --version
 1550  cd ../..
 1551  tox
 1552  pip3 uninstall nose
 1553  pip list | grep context
 1554  pip list
 1555  pip uninstall virtualenv
 1556  pip list
 1557  deactivate
 1558  pip list
 1559  pip uninstall virtualenv
 1560  sudo pip3 uninstall virtualenv
 1561  pip list
 1562  source bin/activate
 1563  cat bin/activate
 1564  echo $VIRTUAL_ENV
 1565  pip show py_app_package
 1566  pip list
 1567  tox
 1568  pip install -e .
 1569  pip install .
 1570  pip uninstall nose
 1571  pip list
 1572  git status
 1573  git add README.rst setup.py 
 1574  git commit -m "Initial commit"
 1575  git push
 1576  git add README.rst setup.py 
 1577  git commit -m "Initial commit"
 1578  git push
 1579  git add README.rst setup.py 
 1580  git commit -m "Initial commit"
 1581  git push
 1582  git add README.rst setup.py 
 1583  git commit -m "Initial commit"
 1584  git push
 1585  git add README.rst setup.py 
 1586  git commit -m "Initial commit"
 1587  git push
 1588  git add README.rst setup.py 
 1589  git commit -m "Initial commit"
 1590  git push
 1591  git add README.rst setup.py 
 1592  git commit -m "Initial commit"
 1593  git push
 1594  git add README.rst setup.py 
 1595  git commit -m "Initial commit"
 1596  git push
 1597  git add README.rst setup.py 
 1598  git commit -m "Initial commit"
 1599  git push
 1600  git add README.rst setup.py 
 1601  git commit -m "Initial commit"
 1602  git push
 1603  tox
 1604  git status
 1605  git add app/tests/test_app_cli.py 
 1606  git commit -m "Initial commit"
 1607  git push
 1608  python setup.py develop
 1609  python setup.py install
 1610  pip install .
 1611  pip install -e .
 1612  deactivate
 1613  cd ..
 1614  cd cm-caas-ui/
 1615  git status
 1616  git pull
 1617  git log
 1618  time docker build . -t cm-caas-ui:andrew
 1619  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1620  docker stop $(docker ps -a -q)
 1621  docker rm $(docker ps -a -q)
 1622  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1623  cd ../py_app_package/
 1624  python setup.py register
 1625  python setup.py sdist upload
 1626  python setup.py sdist bdist_wheel
 1627  ll
 1628  cd dist
 1629  ll
 1630  cd ..
 1631  ll
 1632  pip install -U pip pep517 twine
 1633  pip uninstall -U pip pep517 twine
 1634  pip uninstall pep517 twine
 1635  source bin/activate
 1636  pip uninstall -U pip pep517 twine
 1637  pip install -U pip pep517 twine
 1638  rm -rf build/ dist/
 1639  python -m pep517 build
 1640  python -m pep517.build .
 1641  touch pyproject.toml
 1642  nano pyproject.toml 
 1643  python -m pep517.build .
 1644  rm -rf build/ dist/
 1645  python -m pep517.build .
 1646  ll
 1647  touch CHANGELOG.rst
 1648  touch CONTRIBUTING.rst
 1649  nano CHANGELOG.rst 
 1650  nano CONTRIBUTING.rst 
 1651  cd ../cm-caas-ui
 1652  docker image prune
 1653  docker stop $(docker ps -a -q)
 1654  docker rm $(docker ps -a -q)
 1655  time docker build . -t cm-caas-ui:andrew
 1656  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1657  git pull
 1658  docker stop $(docker ps -a -q)
 1659  docker rm $(docker ps -a -q)
 1660  tree -I "share|lib|bin|*.egg-info|lib64|__pycache__"
 1661  time docker build . -t cm-caas-ui:andrew
 1662  docker run -d -p 5000:80 --name cm-caas-ui cm-caas-ui:andrew
 1663  git checkout master
 1664  git pull
 1665  deactivate
 1666  cd..
 1667  cd ..
 1668  python3 -m venv ./py_app_package
 1669  cd ./py_app_package/
 1670  source bin/activate
 1671  pip install -e .
 1672  autopep8 -r -i
 1673  pip install autopep8
 1674  autopep8 -r -i
 1675  autopep8 -r -i py_app_package
 1676  autopep8 -r -i .
 1677  autopep8 -r -i -v .
 1678  autopep8 -r -i -v app
 1679  git status
 1680  git add .
 1681  git release lib64
 1682  git revert lib64
 1683  git status
 1684  git reset lib64
 1685  git status
 1686  git commit -m "Initial commit"
 1687  pip install flake
 1688  pip3 install flake8
 1689  flake8 app
 1690  python setup.py build
 1691  pip install -e .
 1692  flake8 app
 1693  tox
 1694  rm -rf build/ dist/
 1695  ll
 1696  cat tox.ini
 1697  tox
 1698  python setup.py setup
 1699  python setup.py develop
 1700  tox
 1701  nano .tox
 1702  nano tox.ini 
 1703  tox
 1704  nano requirements.txt 
 1705  tox
 1706  git status
 1707  git add CONTRIBUTING.rst tox.ini 
 1708  rm requirements.txt 
 1709  pip freeze > requirements.txt
 1710  git add requirements.txt 
 1711  git commit -m "initial commit"
 1712  git pushh
 1713  git push
 1714  deactivate
 1715  cd ..
 1716  rm -rf py_app_package/
 1717  git clone git@github.com:Cyber-Mint/py_app_package.git
 1718  python3 -m venv ./py_app_package
 1719  cd ./py_app_package
 1720  source bin/activate
 1721  pip install -e .
 1722  ll
 1723  tox
 1724  pip install tox
 1725  pip3 install tox
 1726  tox
 1727  ll
 1728  nano tox.ini
 1729  tox
 1730  nano tox.ini
 1731  tox
 1732  nano tox.ini
 1733  tox
 1734  nano tox.ini
 1735  tox
 1736  autopep8 -r -i app
 1737  pip3 install tox autorep8 flake8 pycodestyle
 1738  pip install tox autorep8 flake8 pycodestyle
 1739  pip install autorep flake8 pycodestyle
 1740  pip install autorep8
 1741  pip install flake8 pycodestyle
 1742  autorep8
 1743  autopep8
 1744  pip3 install tox autopep8 flake8 pycodestyle
 1745  tox
 1746  tox app
 1747  ll
 1748  pip3 uninstall flake8
 1749  tox
 1750  ll
 1751  tox --help
 1752  tox --showconfig
 1753  cd ../py_app_package/
 1754  source bin/activate
 1755  tox --showconfig
 1756  tox
 1757  autopep8 -r -i app
 1758  flake8 app
 1759  pip3 install flake8
 1760  flake8 app
 1761  pycodestyle app
 1762  pycodestyle --help
 1763  pycodestyle app --verbose
 1764  python -m pip install bump2version
 1765  checking app/tests/test_say_hello.py
 1766  bump2version --current-version 0.1.0 --new-version 0.1.1 patch
 1767  git status
 1768  git add tox.ini 
 1769  git commit -m "Initial Commit"
 1770  tox
 1771  autopep8 -r -i app
 1772  flake8 app
 1773  git status
 1774  git add CONTRIBUTING.rst app/__init__.py 
 1775  git commit -m "Initial Commit"
 1776  git push
 1777  bump2version --current-version 0.1.0 --new-version 0.1.1 fix-for-pep8
 1778  git status
 1779  pip install -e .
 1780  git push --follow-tags
 1781  git tag
 1782  git tag -a v0.1.0 -m "Initial commit"
 1783  gits status
 1784  git status
 1785  git add CONTRIBUTING.rst 
 1786  pip3 install black
 1787  python -m black app
 1788  git status
 1789  python -m black app
 1790  git status
 1791  git add CHANGELOG.rst CONTRIBUTING.rst app/alive.py app/tests/test_app_cli.py 
 1792  git commit -m "Initial Commit"
 1793  git push --follow-tags
 1794  python3 -m pip install --user --upgrade setuptools wheel
 1795  python3 -m pip install --upgrade setuptools wheel
 1796  python3 setup.py sdist bdist_wheel
 1797  ll
 1798  tree dist
 1799  nano $HOME/.pypirc
 1800  python3 -m twine upload --repository testpypi dist/*
 1801  pip3 install twine
 1802  python3 -m twine upload --repository testpypi dist/*
 1803  nano $HOME/.pypirc
 1804  python3 -m twine upload --repository testpypi dist/*
 1805  deactivate
 1806  pip install -i https://test.pypi.org/simple/ py-app-package==0.1.0
 1807  less requirements.txt 
 1808  twine check
 1809  python3 setup.py sdist bdist_wheel
 1810  twine check
 1811  twine check -h dist
 1812  twine check dist/*
 1813  python3 setup.py sdist bdist_wheel
 1814  twine check dist/*
 1815  python3 setup.py sdist bdist_wheel
 1816  twine check dist/*
 1817  python3 setup.py sdist bdist_wheel
 1818  twine check dist/*
 1819  git status
 1820  git add setup.py 
 1821  git commit -m "Initial commit"
 1822  python3 -m twine upload --repository testpypi dist/*
 1823  pip uninstall py_app_package
 1824  pip install -i https://test.pypi.org/simple/ py-app-package==0.1.0
 1825  rm -rf dist/ build/
 1826  python3 setup.py sdist bdist_wheel
 1827  pip install -i https://test.pypi.org/simple/ py-app-package==0.1.0
 1828  python3 -m twine upload --repository testpypi dist/*
 1829  python3 setup.py sdist bdist_wheel
 1830  python3 -m twine upload --repository testpypi dist/*
 1831  python3 -m twine upload --repository testpypi dist/* --verbose
 1832  git status
 1833  git add CHANGELOG.rst 
 1834  git add setup.py 
 1835  git tag -a v0.1.1 -m "Prepare to upload to PyPi"
 1836  tox
 1837  git push --follow-tags
 1838  python3 setup.py sdist bdist_wheel
 1839  rm -rf dist/ build/
 1840  python3 setup.py sdist bdist_wheel
 1841  python3 -m twine upload --repository testpypi dist/* --verbose
 1842  python3 setup.py sdist bdist_wheel
 1843  twine check dist/*
 1844  git tag -a v0.1.2 -m "Upload to PyPi"
 1845  git status
 1846  git add setup.py 
 1847  tox
 1848  python3 setup.py sdist bdist_wheel
 1849  twine check dist/*
 1850  rm dist/py_app_package-0.1.1*
 1851  twine check dist/*
 1852  python3 -m twine upload --repository testpypi dist/* --verbose
 1853  python setup.py check -s -r
 1854  twine check --help
 1855  twine check dist/*
 1856  python3 setup.py sdist bdist_wheel
 1857  twine check dist/*
 1858  python3 setup.py sdist bdist_wheel
 1859  twine check dist/*
 1860  tox
 1861  autopep8 -r -i app
 1862  flake8 app
 1863  python -m black app
 1864  git status
 1865  git add README.rst setup.py 
 1866  git tag -a v0.1.3 -m "Upload to PyPi"
 1867  git push --follow-tags
 1868  git status
 1869  git add README.rst setup.py 
 1870  git tag -a v0.1.3 -m "Upload to PyPi"
 1871  git tag
 1872  git push --follow-tags
 1873  git tag --help
 1874  git status
 1875  git commit -m "Upload to PyPi"
 1876  git push --follow-tags
 1877  git tag -a v0.1.4 -m "Upload to PyPi"
 1878  git status
 1879  git add setup.py 
 1880  git commit -m "Upload to PyPi"
 1881  git push --follow-tags
 1882  rm -rf dist/ build/
 1883  git status
 1884  python3 setup.py sdist bdist_wheel
 1885  twine check dist/*
 1886  python3 -m twine upload --repository testpypi dist/* --verbose
 1887  pip install -i https://test.pypi.org/simple/ py-app-package
 1888  pip3 install faker
 1889  pip3 uninstall faker
 1890  pip install -i https://test.pypi.org/simple/ py-app-package
 1891  git status
 1892  htag
 1893  git tag
 1894  git status
 1895  git add CHANGELOG.rst CONTRIBUTING.rst README.rst setup.py
 1896  git commit -m "Upload to PyPi"
 1897  git tag -a v0.1.5 -m "Upload to PyPi"
 1898  rm -rf dist/ build/
 1899  python3 setup.py sdist bdist_wheel
 1900  twine check dist/*
 1901  python3 -m twine upload --repository testpypi dist/* --verbose
 1902  pip install -i https://test.pypi.org/simple/ py-app-package
 1903  pip3 install -i https://test.pypi.org/simple/ py-app-package
 1904  pip3 install Faker>=4.1.0
 1905  pip3 uninstall Faker>=4.1.0
 1906  pip3 uninstall Faker
 1907  sudo pip3 uninstall Faker
 1908  pip3 install -i https://test.pypi.org/simple/ py-app-package
 1909  python setup.py --long-description | rst2html.py > output.html
 1910  firefox output.html 
 1911  rm output.html 
 1912  nano $HOME/.pypirc
 1913  python3 -m twine upload --repository testpypi dist/* --verbose
 1914  nano $HOME/.pypirc
 1915  python3 -m twine upload --repository testpypi dist/* --verbose
 1916  set TWINE_PASSWORD=pypi-AgENdGVzdC5weXBpLm9yZwIkNWIwYWRjYmEtMmMwMS00ZDUzLTk0OWMtYjBmNWI1MmMwYzE3AAIleyJwZXJtaXNzaW9ucyI6ICJ1c2VyIiwgInZlcnNpb24iOiAxfQAABiCKOX9HiBRQH8TE4vIacnsJdjwfM9xQ6tRobwdZ9o2J9A
 1917  python3 -m twine upload --repository testpypi dist/* --verbose -i __token_
 1918  python3 -m twine upload --repository testpypi dist/* --verbose -u __token_
 1919  echo $TWINE_PASSWORD
 1920  TWINE_PASSWORD=pypi-AgENdGVzdC5weXBpLm9yZwIkNWIwYWRjYmEtMmMwMS00ZDUzLTk0OWMtYjBmNWI1MmMwYzE3AAIleyJwZXJtaXNzaW9ucyI6ICJ1c2VyIiwgInZlcnNpb24iOiAxfQAABiCKOX9HiBRQH8TE4vIacnsJdjwfM9xQ6tRobwdZ9o2J9A
 1921  echo $TWINE_PASSWORD
 1922  python3 -m twine upload --repository testpypi dist/* --verbose -u __token_
 1923  cat requirements.txt 
 1924  python3 setup.py develop
 1925  python3 setup.py build
 1926  pip install -e .
 1927  pip install -e . --verbose
 1928  python3 setup.py build
 1929  python3 setup.py develop
 1930  git status
 1931  git add MANIFEST.in setup.py 
 1932  git commit -m "Enable setup_dependencies"
 1933  ll
 1934  rm '=4.1.0' 
 1935  rm -rf build/ dist/
 1936  ll
 1937  tox
 1938  python3 setup.py sdist bdist_wheel
 1939  python3 -m twine upload --repository testpypi dist/* --verbose -u __token_
 1940  python3 -m twine upload --repository testpypi dist/* --verbose
 1941  pip3 uninstall py-app-package
 1942  pip3 install -i https://test.pypi.org/simple/ py-app-package
 1943  pip3 install -i https://test.pypi.org/legacy/ py-app-package
 1944  pip3 install -i https://test.pypi.org/simple/ py-app-package
 1945  sudo pip3 install -i https://test.pypi.org/simple/ py-app-package
 1946  app-cli
 1947  sudo pip3 install -i https://test.pypi.org/simple/ py-app-package -r requirement.txt
 1948  sudo pip3 install -i https://test.pypi.org/simple/ py-app-package
 1949  sudo pip3 install -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1950  rm -rf build/ dist/
 1951  ll
 1952  pip3 uninstall py-app-package
 1953  python3 setup.py sdist bdist_wheel
 1954  twine check dist/*
 1955  python3 -m twine upload --repository testpypi dist/* --verbose
 1956  sudo pip3 uninstall  -i https://test.pypi.org/simple/ py-app-package
 1957  sudo pip3 uninstall py-app-package
 1958  sudo pip3 install  -i https://test.pypi.org/simple/ py-app-package
 1959  app-cli
 1960  sudo pip3 install -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1961  pip install --upgrade pip
 1962  sudo pip3 install -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1963  sudo pip3 python=3.7 install -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1964  pip3 --help
 1965  sudo pip3 check -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1966  sudo pip3 check  -i https://test.pypi.org/simple/ py-app-package
 1967  sudo pip3 check
 1968  sudo pip3 check app
 1969  sudo pip3 check py-app-package
 1970  sudo pip3 install -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1971  sudo pip3 install --upgrade -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1972  pip install Faker
 1973  pip uninstall Faker
 1974  sudo pip uninstall Faker
 1975  sudo pip install Faker
 1976  sudo pip3 install --upgrade -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 1977  sudo pip3 install --upgrade -i https://test.pypi.org/simple/ py-app-package
 1978  sudo pip3 uninstall py-app-package
 1979  sudo pip3 install --upgrade -i https://test.pypi.org/simple/ py-app-package
 1980  cd /usr/local/lib/python3.8/dist-packages/faker/utils/__pycache__/
 1981  ll
 1982  cd ..
 1983  ll
 1984  cd ..
 1985  ll
 1986  cat config.py
 1987  ll
 1988  cd contrib/
 1989  ll
 1990  cd ..
 1991  ll
 1992  cd ..
 1993  ll
 1994  cd faker
 1995  ll
 1996  cd ..
 1997  ll
 1998  cd Faker-4.1.0.dist-info/
 1999  ll
 2000  cat INSTALLER 
 2001  cat entry_points.txt 
 2002  cd ..
 2003  ll
 2004  cd text_unidecode
 2005  ll
 2006  cd ../..
 2007  cd ..
 2008  cd ~
 2009  sudo pip3 uninstall Faker
 2010  sudo pip3 install --upgrade -i https://test.pypi.org/simple/ py-app-package
 2011  sudo pip3 uninstall py-app-package
 2012  sudo pip3 install --upgrade -i https://test.pypi.org/simple/ py-app-package
 2013  app-cli
 2014  sudo pip3 install --upgrade -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 2015  sudo pip3 install -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 2016  sudo pip3 uninstall py-app-package
 2017  sudo pip3 install -r requirements.txt -i https://test.pypi.org/simple/ py-app-package
 2018  ll
 2019  rm -rf py_app_package.egg-info/
 2020  pip install --user -e .
 2021  pip install -e .
 2022  sudo pip uninstall Faker
 2023  sudo pip3 uninstall Faker
 2024  ll
 2025  pip3 uninstall Faker
 2026  pip3 uninstall unicode
 2027  pip3 uninstall python-dateutil
 2028  pip3 uninstall text-unidecode
 2029  pip install -e .
 2030  pip list
 2031  pip freeze
 2032  git status
 2033  git add CHANGELOG.rst requirements.txt setup.py 
 2034  git commit -m "Intermediate fix"
 2035  git push
 2036  cd ..
 2037  rm -rf py_app_package/
 2038  git clone git@github.com:Cyber-Mint/py_app_package.git
 2039  cd py_app_package/
 2040  ll
 2041  pip list
 2042  pip freeze
 2043  deactivate
 2044  python -m venv ~/dev/py_app_package
 2045  source bin/activate
 2046  pip freeze
 2047  pip install -e .
 2048  pip freeze
 2049  pip freeze > requirements.txt
 2050  ll
 2051  pip install -e .
 2052  LL
 2053  ll
 2054  rm -rf build/ dist/
 2055  python3 setup.py sdist bdist_wheel
